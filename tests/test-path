#!/usr/bin/env bats

source ./em-setup
source ./tests/util.sh

# -----------------------------------------------------------------------------
function setup {
    echo "running setup" >&2
    export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
    export PATH="$PATH:$HOME/bin:/usr/local/xyz"
}

# -----------------------------------------------------------------------------
@test "em path show" {
    run em path show
    [ "$status" -eq 0 ]
    [ "${lines[0]}" = "/usr/local/bin" ]
    [ "${lines[1]}" = "/usr/bin" ]
    [ "${lines[2]}" = "/bin" ]
    [ "${lines[3]}" = "/usr/sbin" ]
    [ "${lines[4]}" = "/sbin" ]
}

# -----------------------------------------------------------------------------
@test "em path rm NOTHING" {
    run em path rm
    [ "$status" -eq 1 ]
    [ "$output" = "'em path rm' requires a regex argument" ]
}

# -----------------------------------------------------------------------------
@test "em path rm RGX" {
    run em path rm sbin
    [ "$status" -eq 0 ]
    EXP="PATH = /usr/local/bin:/usr/bin:/bin:$HOME/bin:/usr/local/xyz"
    [ "$output" = "$EXP" ]
}

# -----------------------------------------------------------------------------
@test "em path rm -n RGX" {
    run em path rm -n sbin
    [ "$status" -eq 0 ]
    EXP="would set '/usr/local/bin:/usr/bin:/bin:$HOME/bin:/usr/local/xyz'"
    [ "$output" = "$EXP" ]
}

# -----------------------------------------------------------------------------
@test "em path decap" {
    run em path decap
    [ "$status" -eq 0 ]
    EXP="PATH = /usr/bin:/bin:/usr/sbin:/sbin:$HOME/bin:/usr/local/xyz"
    [ "$output" = "$EXP" ]
}

# -----------------------------------------------------------------------------
@test "em path decap -n" {
    run em path decap -n
    [ "$status" -eq 0 ]
    EXP="would set '/usr/bin:/bin:/usr/sbin:/sbin:$HOME/bin:/usr/local/xyz'"
    [ "$output" = "$EXP" ]
}

# -----------------------------------------------------------------------------
@test "em path dock" {
    run em path dock
    [ "$status" -eq 0 ]
    EXP="PATH = /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$HOME/bin"
    [ "$output" = "$EXP" ]
}

# -----------------------------------------------------------------------------
@test "em path dock -n" {
    run em path dock -n
    [ "$status" -eq 0 ]
    EXP="would set '/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$HOME/bin'"
    [ "$output" = "$EXP" ]
}

# -----------------------------------------------------------------------------
@test "em path ladd NOTHING" {
    run em path ladd
    [ "$status" -eq 1 ]
    [ "$output" = "'em path ladd' requires a directory argument" ]
}

# -----------------------------------------------------------------------------
@test "em path ladd" {
    run em path ladd /a/b/c
    EXP="PATH = /a/b/c:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
    EXP="$EXP:$HOME/bin:/usr/local/xyz"
    [ "$status" -eq 0 ]
    [ "$output" = "$EXP" ]
}

# -----------------------------------------------------------------------------
@test "em path ladd -n" {
    run em path ladd -n /a/b/c
    EXP="would set '/a/b/c:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
    EXP="$EXP:$HOME/bin:/usr/local/xyz'"
    [ "$status" -eq 0 ]
    [ "$output" = "$EXP" ]
}

# -----------------------------------------------------------------------------
@test "em path radd NOTHING" {
    run em path radd
    [ "$status" -eq 1 ]
    [ "$output" = "'em path radd' requires a directory argument" ]
}

# -----------------------------------------------------------------------------
@test "em path radd" {
    run em path radd /a/b/c
    EXP="PATH = /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
    EXP="$EXP:$HOME/bin:/usr/local/xyz:/a/b/c"
    [ "$status" -eq 0 ]
    [ "$output" = "$EXP" ]
}

# -----------------------------------------------------------------------------
@test "em path radd -n" {
    run em path radd -n /a/b/c
    EXP="would set '/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
    EXP="$EXP:$HOME/bin:/usr/local/xyz:/a/b/c'"
    [ "$status" -eq 0 ]
    [ "$output" = "$EXP" ]
}

# -----------------------------------------------------------------------------
@test "em path no-such-command" {
    run em path nosuch
    [ "$status" -eq 1 ]
    [ "$output" = "Unrecognized path request 'nosuch'" ]
}
