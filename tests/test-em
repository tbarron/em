#!/usr/bin/env bats

source ./em-setup

# -----------------------------------------------------------------------------
function setup {
    echo "running setup" >&2
    export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
    export PATH="$PATH:$HOME/bin:/usr/local/xyz"
}

@test "em help" {
    run em help
    [ "$status" -eq 0 ]
    [ "${lines[0]}" = "em - environment manager" ]
    [ "${lines[1]}" = " " ]
    [ "${lines[2]}" = "    help      - display this message" ]
    [ "${lines[3]}" = "    path show - show \$PATH in a readable format" ]
}

@test "em path show" {
    run em path show
    [ "$status" -eq 0 ]
    [ "${lines[0]}" = "/usr/local/bin" ]
    [ "${lines[1]}" = "/usr/bin" ]
    [ "${lines[2]}" = "/bin" ]
    [ "${lines[3]}" = "/usr/sbin" ]
    [ "${lines[4]}" = "/sbin" ]
}

@test "em path rm RGX" {
    false
}

@test "em path decap" {
    false
}

@test "em path dock" {
    false
}

@test "em path ladd" {
    false
}

@test "em path radd" {
    false
}

@test "em no-such-command" {
    run em nosuch
    [ "$status" -eq 1 ]
    [ "$output" = "Unrecognized command nosuch" ]
}

@test "em path no-such-command" {
    run em path nosuch
    [ "$status" -eq 1 ]
    [ "$output" = "Unrecognized path request 'nosuch'" ]
}

function assert_in() {
    NEEDLE=$1
    HAYSTACK=$2
    RESULT=$(expr "$HAYSTACK" : ".*$NEEDLE")
    if [[ $RESULT == "" || $RESULT == 0 ]]; then
        true
    else
        false
    fi
}
